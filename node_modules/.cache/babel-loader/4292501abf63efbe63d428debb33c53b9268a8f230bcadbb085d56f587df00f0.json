{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nconst useLoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      toast.success('Login successful!');\n      localStorage.setItem('authToken', data.tokens.AccessToken); // store token if needed\n      localStorage.setItem('userEmail', email); // store token if needed\n      navigate('/intro');\n    } catch (error) {\n      console.error('Login error:', error.message);\n      toast.error(error.message);\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.error('Please enter both email and password.');\n      return;\n    }\n    setLoading(true);\n    await loginUser(email, password);\n    setLoading(false);\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    loading,\n    showPassword,\n    togglePasswordVisibility,\n    handleLogin\n  };\n};\n_s(useLoginPage, \"Ww/uYAnl9ue4DMLn+zTPFstY7A8=\", true);\nexport default useLoginPage;","map":{"version":3,"names":["useState","toast","useLoginPage","_s","email","setEmail","password","setPassword","loading","setLoading","showPassword","setShowPassword","navigate","useNavigate","loginUser","data","authService","login","success","localStorage","setItem","tokens","AccessToken","error","console","message","handleLogin","e","preventDefault","togglePasswordVisibility","prev"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useLoginPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nconst useLoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const loginUser = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      toast.success('Login successful!');\n      localStorage.setItem('authToken', data.tokens.AccessToken); // store token if needed\n      localStorage.setItem('userEmail', email); // store token if needed\n      navigate('/intro');\n    } catch (error) {\n      console.error('Login error:', error.message);\n      toast.error(error.message);\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.error('Please enter both email and password.');\n      return;\n    }\n\n    setLoading(true);\n    await loginUser(email, password);\n    setLoading(false);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    loading,\n    showPassword,\n    togglePasswordVisibility,\n    handleLogin,\n  };\n};\n\nexport default useLoginPage;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMY,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9B,MAAMC,SAAS,GAAG,MAAAA,CAAOV,KAAK,EAAEE,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMS,IAAI,GAAG,MAAMC,WAAW,CAACC,KAAK,CAACb,KAAK,EAAEE,QAAQ,CAAC;MACrDL,KAAK,CAACiB,OAAO,CAAC,mBAAmB,CAAC;MAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEL,IAAI,CAACM,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;MAC5DH,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEhB,KAAK,CAAC,CAAC,CAAC;MAC1CQ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC5CxB,KAAK,CAACsB,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACxB,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBL,KAAK,CAACsB,KAAK,CAAC,uCAAuC,CAAC;MACpD;IACF;IAEAd,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMK,SAAS,CAACV,KAAK,EAAEE,QAAQ,CAAC;IAChCG,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMoB,wBAAwB,GAAGA,CAAA,KAAM;IACrClB,eAAe,CAAEmB,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC;EAED,OAAO;IACL1B,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXC,OAAO;IACPE,YAAY;IACZmB,wBAAwB;IACxBH;EACF,CAAC;AACH,CAAC;AAACvB,EAAA,CA9CID,YAAY;AAgDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}