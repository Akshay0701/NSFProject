{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useProfileStore from '../store/profileStore';\nconst useGenerateProposals = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    teams,\n    setIsGeneratingProposals\n  } = useProfileStore();\n  const generateProposals = async () => {\n    if (teams.length === 0) return;\n    setIsGeneratingProposals(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/nsf/generate-proposals', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(teams)\n      });\n      if (!response.ok) throw new Error('Failed to generate proposals');\n      const data = await response.json();\n      navigate('/teamswithproposal', {\n        state: {\n          teams: data\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      toast.error('Error generating proposals. Please try again later.');\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  };\n  return {\n    generateProposals\n  };\n};\n_s(useGenerateProposals, \"ERdZeUNiZhkKfQkkG378dUzhQaM=\", false, function () {\n  return [useNavigate, useProfileStore];\n});\nexport default useGenerateProposals;","map":{"version":3,"names":["useNavigate","toast","useProfileStore","useGenerateProposals","_s","navigate","teams","setIsGeneratingProposals","generateProposals","length","response","fetch","method","mode","headers","body","JSON","stringify","ok","Error","data","json","state","error","console"],"sources":["/Users/akshayjadhav/Documents/GAWork/NSFProject/src/hooks/useGenerateProposals.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useProfileStore from '../store/profileStore';\n\nconst useGenerateProposals = () => {\n  const navigate = useNavigate();\n  const { teams, setIsGeneratingProposals } = useProfileStore();\n\n  const generateProposals = async () => {\n    if (teams.length === 0) return;\n\n    setIsGeneratingProposals(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/nsf/generate-proposals', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(teams),\n      });\n\n      if (!response.ok) throw new Error('Failed to generate proposals');\n      const data = await response.json();\n      navigate('/teamswithproposal', { state: { teams: data } });\n    } catch (error) {\n      console.error(error);\n      toast.error('Error generating proposals. Please try again later.');\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  };\n\n  return { generateProposals };\n};\n\nexport default useGenerateProposals;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,eAAe,MAAM,uBAAuB;AAEnD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,KAAK;IAAEC;EAAyB,CAAC,GAAGL,eAAe,CAAC,CAAC;EAE7D,MAAMM,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IAExBF,wBAAwB,CAAC,IAAI,CAAC;IAE9B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK;MAC5B,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjE,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClChB,QAAQ,CAAC,oBAAoB,EAAE;QAAEiB,KAAK,EAAE;UAAEhB,KAAK,EAAEc;QAAK;MAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBtB,KAAK,CAACsB,KAAK,CAAC,qDAAqD,CAAC;IACpE,CAAC,SAAS;MACRhB,wBAAwB,CAAC,KAAK,CAAC;IACjC;EACF,CAAC;EAED,OAAO;IAAEC;EAAkB,CAAC;AAC9B,CAAC;AAACJ,EAAA,CA7BID,oBAAoB;EAAA,QACPH,WAAW,EACgBE,eAAe;AAAA;AA6B7D,eAAeC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}