{"ast":null,"code":"// src/hooks/useIntroPage.js\nimport{useCallback,useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import roomService from'../services/roomService';const useIntroPage=()=>{const navigate=useNavigate();const[roomID,setRoomID]=useState('');const[error,setError]=useState('');const[userRooms,setUserRooms]=useState([]);const[isLoading,setIsLoading]=useState(false);const userEmail=localStorage.getItem('userEmail');const createRoom=useCallback(async creatorID=>{try{const result=await roomService.createRoom(creatorID);toast.success('Room created successfully.');return result;// { message, RoomID }\n}catch(err){console.error(err);toast.error('Failed to create room.');throw err;}},[]);const getRoomsByEmail=useCallback(async email=>{try{const data=await roomService.getRoomsByEmail(email);return data.rooms||[];}catch(err){console.error(err);toast.error('Failed to fetch rooms by email.');return[];}},[]);const removeRoom=useCallback(async _ref=>{let{roomID,email}=_ref;try{const result=await roomService.removeRoomData({roomID,email});toast.success('Room removed successfully.');return result;}catch(err){console.error(err);toast.error('Failed to remove room.');throw err;}},[]);const fetchRooms=useCallback(async()=>{if(!userEmail){toast.error('Please log in to view your rooms');return;}setIsLoading(true);try{const rooms=await getRoomsByEmail(userEmail);setUserRooms(rooms);}catch{toast.error('Could not fetch rooms');}finally{setIsLoading(false);}},[userEmail,getRoomsByEmail]);const handleJoinRoom=()=>{const trimmedID=roomID.trim();if(!trimmedID){setError('Please enter a Room ID');return;}setError('');navigate(`/room/${trimmedID}`);};const handleCreateRoom=async()=>{if(!userEmail){toast.error('Please log in to create a room');return;}setIsLoading(true);try{const res=await createRoom(userEmail);const newRoomId=res.RoomID;navigate(`/room/${newRoomId}`);}catch{toast.error('Failed to create room. Please try again.');}finally{setIsLoading(false);}};const handleDeleteRoom=async roomID=>{if(!window.confirm('Are you sure you want to delete this room?'))return;try{await removeRoom({roomID,email:userEmail});fetchRooms();}catch{toast.error('Failed to delete room');}};useEffect(()=>{fetchRooms();},[fetchRooms]);return{roomID,setRoomID,error,setError,isLoading,userRooms,handleJoinRoom,handleCreateRoom,handleDeleteRoom};};export default useIntroPage;","map":{"version":3,"names":["useCallback","useEffect","useState","useNavigate","toast","roomService","useIntroPage","navigate","roomID","setRoomID","error","setError","userRooms","setUserRooms","isLoading","setIsLoading","userEmail","localStorage","getItem","createRoom","creatorID","result","success","err","console","getRoomsByEmail","email","data","rooms","removeRoom","_ref","removeRoomData","fetchRooms","handleJoinRoom","trimmedID","trim","handleCreateRoom","res","newRoomId","RoomID","handleDeleteRoom","window","confirm"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFProject/src/hooks/useIntroPage.js"],"sourcesContent":["// src/hooks/useIntroPage.js\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport roomService from '../services/roomService';\n\nconst useIntroPage = () => {\n  const navigate = useNavigate();\n  const [roomID, setRoomID] = useState('');\n  const [error, setError] = useState('');\n  const [userRooms, setUserRooms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const userEmail = localStorage.getItem('userEmail');\n\n  const createRoom = useCallback(async (creatorID) => {\n    try {\n      const result = await roomService.createRoom(creatorID);\n      toast.success('Room created successfully.');\n      return result; // { message, RoomID }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to create room.');\n      throw err;\n    }\n  }, []);\n\n  const getRoomsByEmail = useCallback(async (email) => {\n    try {\n      const data = await roomService.getRoomsByEmail(email);\n      return data.rooms || [];\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to fetch rooms by email.');\n      return [];\n    }\n  }, []);\n\n  const removeRoom = useCallback(async ({roomID, email}) => {\n    try {\n      const result = await roomService.removeRoomData({ roomID, email});\n      toast.success('Room removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove room.');\n      throw err;\n    }\n  }, [])\n\n  const fetchRooms = useCallback(async () => {\n    if (!userEmail) {\n      toast.error('Please log in to view your rooms');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const rooms = await getRoomsByEmail(userEmail);\n      setUserRooms(rooms);\n    } catch {\n      toast.error('Could not fetch rooms');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userEmail, getRoomsByEmail]);\n\n  const handleJoinRoom = () => {\n    const trimmedID = roomID.trim();\n    if (!trimmedID) {\n      setError('Please enter a Room ID');\n      return;\n    }\n    setError('');\n    navigate(`/room/${trimmedID}`);\n  };\n\n  const handleCreateRoom = async () => {\n    if (!userEmail) {\n      toast.error('Please log in to create a room');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const res = await createRoom(userEmail);\n      const newRoomId = res.RoomID;\n      navigate(`/room/${newRoomId}`);\n    } catch {\n      toast.error('Failed to create room. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDeleteRoom = async (roomID) => {\n    if (!window.confirm('Are you sure you want to delete this room?')) return;\n    try {\n      await removeRoom({ roomID, email: userEmail });\n      fetchRooms();\n    } catch {\n      toast.error('Failed to delete room');\n    }\n  };\n\n  useEffect(() => {\n    fetchRooms();\n  }, [fetchRooms]);\n\n  return {\n    roomID,\n    setRoomID,\n    error,\n    setError,\n    isLoading,\n    userRooms,\n    handleJoinRoom,\n    handleCreateRoom,\n    handleDeleteRoom,\n  };\n};\n\nexport default useIntroPage;\n"],"mappings":"AAAA;AACA,OAASA,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACxD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CAEjD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACK,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAc,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAEnD,KAAM,CAAAC,UAAU,CAAGnB,WAAW,CAAC,KAAO,CAAAoB,SAAS,EAAK,CAClD,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAhB,WAAW,CAACc,UAAU,CAACC,SAAS,CAAC,CACtDhB,KAAK,CAACkB,OAAO,CAAC,4BAA4B,CAAC,CAC3C,MAAO,CAAAD,MAAM,CAAE;AACjB,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACd,KAAK,CAACa,GAAG,CAAC,CAClBnB,KAAK,CAACM,KAAK,CAAC,wBAAwB,CAAC,CACrC,KAAM,CAAAa,GAAG,CACX,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,eAAe,CAAGzB,WAAW,CAAC,KAAO,CAAA0B,KAAK,EAAK,CACnD,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAtB,WAAW,CAACoB,eAAe,CAACC,KAAK,CAAC,CACrD,MAAO,CAAAC,IAAI,CAACC,KAAK,EAAI,EAAE,CACzB,CAAE,MAAOL,GAAG,CAAE,CACZC,OAAO,CAACd,KAAK,CAACa,GAAG,CAAC,CAClBnB,KAAK,CAACM,KAAK,CAAC,iCAAiC,CAAC,CAC9C,MAAO,EAAE,CACX,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAmB,UAAU,CAAG7B,WAAW,CAAC,MAAA8B,IAAA,EAA2B,IAApB,CAACtB,MAAM,CAAEkB,KAAK,CAAC,CAAAI,IAAA,CACnD,GAAI,CACF,KAAM,CAAAT,MAAM,CAAG,KAAM,CAAAhB,WAAW,CAAC0B,cAAc,CAAC,CAAEvB,MAAM,CAAEkB,KAAK,CAAC,CAAC,CACjEtB,KAAK,CAACkB,OAAO,CAAC,4BAA4B,CAAC,CAC3C,MAAO,CAAAD,MAAM,CACf,CAAE,MAAOE,GAAG,CAAE,CACZC,OAAO,CAACd,KAAK,CAACa,GAAG,CAAC,CAClBnB,KAAK,CAACM,KAAK,CAAC,wBAAwB,CAAC,CACrC,KAAM,CAAAa,GAAG,CACX,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,UAAU,CAAGhC,WAAW,CAAC,SAAY,CACzC,GAAI,CAACgB,SAAS,CAAE,CACdZ,KAAK,CAACM,KAAK,CAAC,kCAAkC,CAAC,CAC/C,OACF,CAEAK,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF,KAAM,CAAAa,KAAK,CAAG,KAAM,CAAAH,eAAe,CAACT,SAAS,CAAC,CAC9CH,YAAY,CAACe,KAAK,CAAC,CACrB,CAAE,KAAM,CACNxB,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC,CACtC,CAAC,OAAS,CACRK,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAAE,CAACC,SAAS,CAAES,eAAe,CAAC,CAAC,CAEhC,KAAM,CAAAQ,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,SAAS,CAAG1B,MAAM,CAAC2B,IAAI,CAAC,CAAC,CAC/B,GAAI,CAACD,SAAS,CAAE,CACdvB,QAAQ,CAAC,wBAAwB,CAAC,CAClC,OACF,CACAA,QAAQ,CAAC,EAAE,CAAC,CACZJ,QAAQ,CAAC,SAAS2B,SAAS,EAAE,CAAC,CAChC,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAACpB,SAAS,CAAE,CACdZ,KAAK,CAACM,KAAK,CAAC,gCAAgC,CAAC,CAC7C,OACF,CAEAK,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF,KAAM,CAAAsB,GAAG,CAAG,KAAM,CAAAlB,UAAU,CAACH,SAAS,CAAC,CACvC,KAAM,CAAAsB,SAAS,CAAGD,GAAG,CAACE,MAAM,CAC5BhC,QAAQ,CAAC,SAAS+B,SAAS,EAAE,CAAC,CAChC,CAAE,KAAM,CACNlC,KAAK,CAACM,KAAK,CAAC,0CAA0C,CAAC,CACzD,CAAC,OAAS,CACRK,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAyB,gBAAgB,CAAG,KAAO,CAAAhC,MAAM,EAAK,CACzC,GAAI,CAACiC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,CAAE,OACnE,GAAI,CACF,KAAM,CAAAb,UAAU,CAAC,CAAErB,MAAM,CAAEkB,KAAK,CAAEV,SAAU,CAAC,CAAC,CAC9CgB,UAAU,CAAC,CAAC,CACd,CAAE,KAAM,CACN5B,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC,CACtC,CACF,CAAC,CAEDT,SAAS,CAAC,IAAM,CACd+B,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB,MAAO,CACLxB,MAAM,CACNC,SAAS,CACTC,KAAK,CACLC,QAAQ,CACRG,SAAS,CACTF,SAAS,CACTqB,cAAc,CACdG,gBAAgB,CAChBI,gBACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAlC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}