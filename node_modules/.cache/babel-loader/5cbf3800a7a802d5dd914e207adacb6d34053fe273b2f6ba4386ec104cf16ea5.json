{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport roomService from '../services/roomService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nconst useRoom = () => {\n  _s();\n  const fetchRoomData = useCallback(async roomId => {\n    try {\n      const data = await roomService.getRoomData(roomId);\n      console.log('data at useRoom page:', data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n  const extractTextFromPDF = useCallback(async pdfFile => {\n    try {\n      const data = await roomService.extractTextFromPDF(pdfFile);\n      return data.text; // expects { text: '...' }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract text from PDF.');\n      return '';\n    }\n  }, []);\n  const removeProfile = useCallback(async ({\n    roomID,\n    email,\n    senderEmail\n  }) => {\n    try {\n      const result = await roomService.removeProfileFromRoom({\n        roomID,\n        email,\n        senderEmail\n      });\n      toast.success('Profile removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove profile.');\n      throw err;\n    }\n  }, []);\n  const removeRoom = useCallback(async ({\n    roomID,\n    email\n  }) => {\n    try {\n      const result = await roomService.removeRoomData({\n        roomID,\n        email\n      });\n      toast.success('Room removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove room.');\n      throw err;\n    }\n  }, []);\n  const addProfile = useCallback(async ({\n    roomID,\n    name,\n    email,\n    description\n  }) => {\n    try {\n      const result = await roomService.addProfileToRoom({\n        roomID,\n        name,\n        email,\n        description\n      });\n      toast.success('Profile added successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to add profile.');\n      throw err;\n    }\n  }, []);\n  const createRoom = useCallback(async creatorID => {\n    try {\n      const result = await roomService.createRoom(creatorID);\n      toast.success('Room created successfully.');\n      return result; // { message, RoomID }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to create room.');\n      throw err;\n    }\n  }, []);\n  const getRoomsByEmail = useCallback(async email => {\n    try {\n      const data = await roomService.getRoomsByEmail(email);\n      return data.rooms || [];\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to fetch rooms by email.');\n      return [];\n    }\n  }, []);\n  const extracted_keywords = useCallback(async roomID => {\n    try {\n      const data = await roomService.extractResearchKeywords(roomID);\n      navigate(`/room/${roomID}/profiles`);\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract keywords from room.');\n      return [];\n    }\n  }, []);\n  return {\n    fetchRoomData,\n    extractTextFromPDF,\n    addProfile,\n    removeProfile,\n    createRoom,\n    getRoomsByEmail,\n    removeRoom,\n    extracted_keywords\n  };\n};\n_s(useRoom, \"HZH3gL+acMzX5ElC3uJ1scUNSHE=\");\nexport default useRoom;","map":{"version":3,"names":["useCallback","roomService","toast","useNavigate","useRoom","_s","fetchRoomData","roomId","data","getRoomData","console","log","err","error","extractTextFromPDF","pdfFile","text","removeProfile","roomID","email","senderEmail","result","removeProfileFromRoom","success","removeRoom","removeRoomData","addProfile","name","description","addProfileToRoom","createRoom","creatorID","getRoomsByEmail","rooms","extracted_keywords","extractResearchKeywords","navigate"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useRoom.js"],"sourcesContent":["import { useCallback } from 'react';\nimport roomService from '../services/roomService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nconst useRoom = () => {\n  const fetchRoomData = useCallback(async (roomId) => {\n    try {\n      const data = await roomService.getRoomData(roomId);\n      console.log('data at useRoom page:', data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n\n  const extractTextFromPDF = useCallback(async (pdfFile) => {\n    try {\n      const data = await roomService.extractTextFromPDF(pdfFile);\n      return data.text; // expects { text: '...' }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract text from PDF.');\n      return '';\n    }\n  }, []);\n\n  const removeProfile = useCallback(async ({ roomID, email, senderEmail }) => {\n    try {\n      const result = await roomService.removeProfileFromRoom({ roomID, email, senderEmail });\n      toast.success('Profile removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove profile.');\n      throw err;\n    }\n  }, []);\n\n  const removeRoom = useCallback(async ({roomID, email}) => {\n    try {\n      const result = await roomService.removeRoomData({ roomID, email});\n      toast.success('Room removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove room.');\n      throw err;\n    }\n  }, [])\n\n  const addProfile = useCallback(async ({ roomID, name, email, description }) => {\n    try {\n      const result = await roomService.addProfileToRoom({ roomID, name, email, description });\n      toast.success('Profile added successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to add profile.');\n      throw err;\n    }\n  }, []);\n\n  const createRoom = useCallback(async (creatorID) => {\n    try {\n      const result = await roomService.createRoom(creatorID);\n      toast.success('Room created successfully.');\n      return result; // { message, RoomID }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to create room.');\n      throw err;\n    }\n  }, []);\n\n  const getRoomsByEmail = useCallback(async (email) => {\n    try {\n      const data = await roomService.getRoomsByEmail(email);\n      return data.rooms || [];\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to fetch rooms by email.');\n      return [];\n    }\n  }, []);\n\n  const extracted_keywords = useCallback(async (roomID) => {\n    try {\n      const data = await roomService.extractResearchKeywords(roomID);\n      navigate(`/room/${roomID}/profiles`);\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract keywords from room.');\n      return [];\n    }\n  }, []);\n\n  return {\n    fetchRoomData,\n    extractTextFromPDF,\n    addProfile,\n    removeProfile,\n    createRoom,\n    getRoomsByEmail,\n    removeRoom,\n    extracted_keywords,\n  };\n};\n\nexport default useRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}