{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:5000/room';\nconst getRoomData = async roomId => {\n  const response = await fetch(`${BASE_URL}/get-room/${roomId}`, {\n    method: 'GET'\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to get room data');\n  }\n  return response.json();\n};\nconst addProfileToRoom = async ({\n  roomID,\n  name,\n  email,\n  description\n}) => {\n  const response = await fetch(`${BASE_URL}/add-profile`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      RoomID: roomID,\n      name,\n      email,\n      description\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add profile to room');\n  }\n  return response.json();\n};\nconst removeProfileFromRoom = async ({\n  roomID,\n  email\n}) => {\n  const response = await fetch(`${BASE_URL}/remove-profile`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      RoomID: roomID,\n      email\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to remove profile from room');\n  }\n  return response.json();\n};\nexport default {\n  getRoomData,\n  addProfileToRoom,\n  removeProfileFromRoom\n};","map":{"version":3,"names":["BASE_URL","getRoomData","roomId","response","fetch","method","ok","error","json","Error","addProfileToRoom","roomID","name","email","description","headers","body","JSON","stringify","RoomID","removeProfileFromRoom"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/services/roomService.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:5000/room';\n\nconst getRoomData = async (roomId) => {\n  const response = await fetch(`${BASE_URL}/get-room/${roomId}`, {\n    method: 'GET',\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to get room data');\n  }\n\n  return response.json();\n};\n\nconst addProfileToRoom = async ({ roomID, name, email, description }) => {\n  const response = await fetch(`${BASE_URL}/add-profile`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ RoomID: roomID, name, email, description }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add profile to room');\n  }\n\n  return response.json();\n};\n\nconst removeProfileFromRoom = async ({ roomID, email }) => {\n  const response = await fetch(`${BASE_URL}/remove-profile`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ RoomID: roomID, email }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to remove profile from room');\n  }\n\n  return response.json();\n};\n\nexport default {\n  getRoomData,\n  addProfileToRoom,\n  removeProfileFromRoom,\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,EAAE,EAAE;IAC7DG,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,yBAAyB,CAAC;EAC3D;EAEA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAAA,CAAO;EAAEC,MAAM;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EACvE,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,cAAc,EAAE;IACtDK,MAAM,EAAE,MAAM;IACdU,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAER,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAY,CAAC;EACnE,CAAC,CAAC;EAEF,IAAI,CAACX,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,+BAA+B,CAAC;EACjE;EAEA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMY,qBAAqB,GAAG,MAAAA,CAAO;EAAET,MAAM;EAAEE;AAAM,CAAC,KAAK;EACzD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,iBAAiB,EAAE;IACzDK,MAAM,EAAE,MAAM;IACdU,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAER,MAAM;MAAEE;IAAM,CAAC;EAChD,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,oCAAoC,CAAC;EACtE;EAEA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,eAAe;EACbP,WAAW;EACXS,gBAAgB;EAChBU;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}