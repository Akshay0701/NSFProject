{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { toast } from 'react-toastify';\nimport roomService from '../services/roomService';\nconst useRoom = () => {\n  _s();\n  // Fetch room data by ID\n  const fetchRoomData = useCallback(async roomId => {\n    try {\n      const data = await roomService.getRoomData(roomId);\n      return data;\n    } catch (err) {\n      console.error('Error fetching room:', err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n\n  // Add profile to room\n  const addProfileToRoom = useCallback(async (roomID, name, email, description, pdfFile) => {\n    try {\n      const response = await roomService.addProfileToRoom({\n        roomID,\n        name,\n        email,\n        description,\n        pdfFile\n      });\n      toast.success('Profile added successfully');\n      return response;\n    } catch (err) {\n      console.error('Error adding profile:', err);\n      toast.error(err.message || 'Failed to add profile.');\n      return null;\n    }\n  }, []);\n  return {\n    fetchRoomData,\n    addProfileToRoom\n  };\n};\n_s(useRoom, \"11VVuKkdPzsYyqJhRGCk2Ad0gE4=\");\nexport default useRoom;","map":{"version":3,"names":["useCallback","toast","roomService","useRoom","_s","fetchRoomData","roomId","data","getRoomData","err","console","error","addProfileToRoom","roomID","name","email","description","pdfFile","response","success","message"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useRoom.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { toast } from 'react-toastify';\nimport roomService from '../services/roomService';\n\nconst useRoom = () => {\n  // Fetch room data by ID\n  const fetchRoomData = useCallback(async (roomId) => {\n    try {\n      const data = await roomService.getRoomData(roomId);\n      return data;\n    } catch (err) {\n      console.error('Error fetching room:', err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n\n  // Add profile to room\n  const addProfileToRoom = useCallback(async (roomID, name, email, description, pdfFile) => {\n    try {\n      const response = await roomService.addProfileToRoom({\n        roomID,\n        name,\n        email,\n        description,\n        pdfFile,\n      });\n      toast.success('Profile added successfully');\n      return response;\n    } catch (err) {\n      console.error('Error adding profile:', err);\n      toast.error(err.message || 'Failed to add profile.');\n      return null;\n    }\n  }, []);\n\n  return {\n    fetchRoomData,\n    addProfileToRoom,\n  };\n};\n\nexport default useRoom;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAMC,aAAa,GAAGL,WAAW,CAAC,MAAOM,MAAM,IAAK;IAClD,IAAI;MACF,MAAMC,IAAI,GAAG,MAAML,WAAW,CAACM,WAAW,CAACF,MAAM,CAAC;MAClD,OAAOC,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC1CR,KAAK,CAACU,KAAK,CAAC,2BAA2B,CAAC;MACxC,OAAO,IAAI;IACb;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAGZ,WAAW,CAAC,OAAOa,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,WAAW,EAAEC,OAAO,KAAK;IACxF,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACU,gBAAgB,CAAC;QAClDC,MAAM;QACNC,IAAI;QACJC,KAAK;QACLC,WAAW;QACXC;MACF,CAAC,CAAC;MACFhB,KAAK,CAACkB,OAAO,CAAC,4BAA4B,CAAC;MAC3C,OAAOD,QAAQ;IACjB,CAAC,CAAC,OAAOT,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CR,KAAK,CAACU,KAAK,CAACF,GAAG,CAACW,OAAO,IAAI,wBAAwB,CAAC;MACpD,OAAO,IAAI;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLf,aAAa;IACbO;EACF,CAAC;AACH,CAAC;AAACR,EAAA,CApCID,OAAO;AAsCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}