{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport authService from '../services/authService';\nconst useLoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      toast.success('Login successful!');\n      localStorage.setItem('authToken', data.tokens.AccessToken); // store token if needed\n      localStorage.setItem('refreshToken', data.tokens.RefreshToken);\n      localStorage.setItem('userEmail', email); // store token if needed\n      navigate('/intro');\n    } catch (error) {\n      console.error('Login error:', error.message);\n      toast.error(error.message);\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Basic validations\n    if (!email || !password) {\n      toast.error('Please enter both email and password.');\n      return;\n    }\n\n    // Email format check\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      toast.error('Please enter a valid email address.');\n      return;\n    }\n\n    // Password strength (at least 6 characters, you can customize)\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters long.');\n      return;\n    }\n    try {\n      setLoading(true);\n      await loginUser(email, password);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    loading,\n    showPassword,\n    togglePasswordVisibility,\n    handleLogin\n  };\n};\n_s(useLoginPage, \"Ww/uYAnl9ue4DMLn+zTPFstY7A8=\", false, function () {\n  return [useNavigate];\n});\nexport default useLoginPage;","map":{"version":3,"names":["useState","toast","useNavigate","authService","useLoginPage","_s","email","setEmail","password","setPassword","loading","setLoading","showPassword","setShowPassword","navigate","loginUser","data","login","success","localStorage","setItem","tokens","AccessToken","RefreshToken","error","console","message","handleLogin","e","preventDefault","emailRegex","test","length","togglePasswordVisibility","prev"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useLoginPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport authService from '../services/authService';\n\nconst useLoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const loginUser = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      toast.success('Login successful!');\n      localStorage.setItem('authToken', data.tokens.AccessToken); // store token if needed\n      localStorage.setItem('refreshToken', data.tokens.RefreshToken);\n      localStorage.setItem('userEmail', email); // store token if needed\n      navigate('/intro');\n    } catch (error) {\n      console.error('Login error:', error.message);\n      toast.error(error.message);\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n  \n    // Basic validations\n    if (!email || !password) {\n      toast.error('Please enter both email and password.');\n      return;\n    }\n  \n    // Email format check\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      toast.error('Please enter a valid email address.');\n      return;\n    }\n  \n    // Password strength (at least 6 characters, you can customize)\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters long.');\n      return;\n    }\n  \n    try {\n      setLoading(true);\n      await loginUser(email, password);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    loading,\n    showPassword,\n    togglePasswordVisibility,\n    handleLogin,\n  };\n};\n\nexport default useLoginPage;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,SAAS,GAAG,MAAAA,CAAOT,KAAK,EAAEE,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMQ,IAAI,GAAG,MAAMb,WAAW,CAACc,KAAK,CAACX,KAAK,EAAEE,QAAQ,CAAC;MACrDP,KAAK,CAACiB,OAAO,CAAC,mBAAmB,CAAC;MAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;MAC5DH,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEJ,IAAI,CAACK,MAAM,CAACE,YAAY,CAAC;MAC9DJ,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEd,KAAK,CAAC,CAAC,CAAC;MAC1CQ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC5CzB,KAAK,CAACuB,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACvB,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBP,KAAK,CAACuB,KAAK,CAAC,uCAAuC,CAAC;MACpD;IACF;;IAEA;IACA,MAAMM,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACzB,KAAK,CAAC,EAAE;MAC3BL,KAAK,CAACuB,KAAK,CAAC,qCAAqC,CAAC;MAClD;IACF;;IAEA;IACA,IAAIhB,QAAQ,CAACwB,MAAM,GAAG,CAAC,EAAE;MACvB/B,KAAK,CAACuB,KAAK,CAAC,8CAA8C,CAAC;MAC3D;IACF;IAEA,IAAI;MACFb,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,SAAS,CAACT,KAAK,EAAEE,QAAQ,CAAC;IAClC,CAAC,SAAS;MACRG,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsB,wBAAwB,GAAGA,CAAA,KAAM;IACrCpB,eAAe,CAAEqB,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC;EAED,OAAO;IACL5B,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXC,OAAO;IACPE,YAAY;IACZqB,wBAAwB;IACxBN;EACF,CAAC;AACH,CAAC;AAACtB,EAAA,CAjEID,YAAY;EAAA,QAKCF,WAAW;AAAA;AA8D9B,eAAeE,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}