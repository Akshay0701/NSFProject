{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import'./ProfilesPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfilesPage=()=>{var _location$state;const location=useLocation();const[profiles]=useState(((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.profiles)||[]);const[viewMode,setViewMode]=useState('grid');// Cleanup object URLs when component unmounts\nuseEffect(()=>{return()=>{profiles.forEach(profile=>{if(profile.uploadType==='pdf'){profile.files.forEach(file=>{if(file.url.startsWith('blob:')){URL.revokeObjectURL(file.url);}});}});};},[profiles]);return/*#__PURE__*/_jsxs(\"div\",{className:\"profiles-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profiles-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Researcher Profiles\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{className:`view-button ${viewMode==='grid'?'active':''}`,onClick:()=>setViewMode('grid'),children:\"Grid View\"}),/*#__PURE__*/_jsx(\"button\",{className:`view-button ${viewMode==='list'?'active':''}`,onClick:()=>setViewMode('list'),children:\"List View\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:`profiles-container ${viewMode}-view`,children:profiles.map((profile,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"profile-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:profile.name||`Researcher ${index+1}`}),/*#__PURE__*/_jsx(\"p\",{className:\"affiliation\",children:profile.affiliation}),/*#__PURE__*/_jsx(\"div\",{className:\"research-area\",children:/*#__PURE__*/_jsx(\"span\",{children:profile.researchArea})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[profile.uploadType==='pdf'&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-content\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Uploaded Documents (\",profile.files.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pdf-list\",children:profile.files.map((file,fileIndex)=>/*#__PURE__*/_jsxs(\"a\",{href:file.url,download:file.name,className:\"pdf-item\",children:[\"\\uD83D\\uDCC4 \",file.name]},fileIndex))})]}),profile.uploadType==='url'&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Research Links\"}),/*#__PURE__*/_jsx(\"a\",{href:profile.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"research-link\",children:profile.url})]}),profile.uploadType==='text'&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Research Summary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-content\",children:profile.text})]})]})]},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"create-teams-footer\",children:/*#__PURE__*/_jsx(Link,{to:\"/teams\",className:\"create-teams-button\",children:\"Create Teams\"})})]});};export default ProfilesPage;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","jsx","_jsx","jsxs","_jsxs","ProfilesPage","_location$state","location","profiles","state","viewMode","setViewMode","forEach","profile","uploadType","files","file","url","startsWith","URL","revokeObjectURL","className","children","onClick","map","index","name","affiliation","researchArea","length","fileIndex","href","download","target","rel","text","to"],"sources":["/Users/akshayjadhav/Documents/GAWork/NSFLLMProject/React App/nsf-react-app/src/profilepage/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './ProfilesPage.css';\n\nconst ProfilesPage = () => {\n    const location = useLocation();\n    const [profiles] = useState(location.state?.profiles || []);\n    const [viewMode, setViewMode] = useState('grid');\n\n    // Cleanup object URLs when component unmounts\n    useEffect(() => {\n        return () => {\n            profiles.forEach(profile => {\n                if (profile.uploadType === 'pdf') {\n                    profile.files.forEach(file => {\n                        if (file.url.startsWith('blob:')) {\n                            URL.revokeObjectURL(file.url);\n                        }\n                    });\n                }\n            });\n        };\n    }, [profiles]);\n\n    return (\n        <div className=\"profiles-page\">\n            <div className=\"profiles-header\">\n                <h1>Researcher Profiles</h1>\n                <div className=\"view-toggle\">\n                    <button \n                        className={`view-button ${viewMode === 'grid' ? 'active' : ''}`}\n                        onClick={() => setViewMode('grid')}\n                    >\n                        Grid View\n                    </button>\n                    <button \n                        className={`view-button ${viewMode === 'list' ? 'active' : ''}`}\n                        onClick={() => setViewMode('list')}\n                    >\n                        List View\n                    </button>\n                </div>\n            </div>\n\n            <div className={`profiles-container ${viewMode}-view`}>\n                {profiles.map((profile, index) => (\n                    <div key={index} className=\"profile-card\">\n                        <div className=\"card-header\">\n                            <h2>{profile.name || `Researcher ${index + 1}`}</h2>\n                            <p className=\"affiliation\">{profile.affiliation}</p>\n                            <div className=\"research-area\">\n                                <span>{profile.researchArea}</span>\n                            </div>\n                        </div>\n\n                        <div className=\"card-content\">\n                            {profile.uploadType === 'pdf' && (\n                                <div className=\"upload-content\">\n                                    <h4>Uploaded Documents ({profile.files.length})</h4>\n                                    <div className=\"pdf-list\">\n                                        {profile.files.map((file, fileIndex) => (\n                                            <a\n                                                key={fileIndex}\n                                                href={file.url}\n                                                download={file.name}\n                                                className=\"pdf-item\"\n                                            >\n                                                ðŸ“„ {file.name}\n                                            </a>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n\n                            {profile.uploadType === 'url' && (\n                                <div className=\"upload-content\">\n                                    <h4>Research Links</h4>\n                                    <a\n                                        href={profile.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"research-link\"\n                                    >\n                                        {profile.url}\n                                    </a>\n                                </div>\n                            )}\n\n                            {profile.uploadType === 'text' && (\n                                <div className=\"upload-content\">\n                                    <h4>Research Summary</h4>\n                                    <div className=\"text-content\">{profile.text}</div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"create-teams-footer\">\n                <Link to=\"/teams\" className=\"create-teams-button\">\n                    Create Teams\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default ProfilesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}