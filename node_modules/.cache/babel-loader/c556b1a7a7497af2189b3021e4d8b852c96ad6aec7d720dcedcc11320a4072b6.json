{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport roomService from '../services/roomService';\nimport computingService from '../services/computingService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nconst useRoom = () => {\n  _s();\n  const navigate = useNavigate();\n  const fetchRoomData = useCallback(async roomId => {\n    try {\n      const data = await roomService.getRoomData(roomId);\n      console.log('data at useRoom page:', data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n  const extractTextFromPDF = useCallback(async pdfFile => {\n    try {\n      const data = await computingService.extractTextFromPDF(pdfFile);\n      return data.text; // expects { text: '...' }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract text from PDF.');\n      return '';\n    }\n  }, []);\n  const removeProfile = useCallback(async ({\n    roomID,\n    email,\n    senderEmail\n  }) => {\n    try {\n      const result = await roomService.removeProfileFromRoom({\n        roomID,\n        email,\n        senderEmail\n      });\n      toast.success('Profile removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove profile.');\n      throw err;\n    }\n  }, []);\n  const addProfile = useCallback(async ({\n    roomID,\n    name,\n    email,\n    description\n  }) => {\n    try {\n      const result = await roomService.addProfileToRoom({\n        roomID,\n        name,\n        email,\n        description\n      });\n      toast.success('Profile added successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to add profile.');\n      throw err;\n    }\n  }, []);\n  const extracted_keywords = useCallback(async roomID => {\n    try {\n      const data = await computingService.extractResearchKeywords(roomID);\n      navigate(`/room/${roomID}/profiles`);\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract keywords from room.');\n      return [];\n    }\n  }, []);\n  const fetchTeams = useCallback(async roomID => {\n    try {\n      const data = await roomService.getTeamsByRoom(roomID);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load teams data');\n      return [];\n    }\n  }, []);\n  return {\n    fetchRoomData,\n    fetchTeams,\n    extractTextFromPDF,\n    addProfile,\n    removeProfile,\n    extracted_keywords\n  };\n};\n_s(useRoom, \"rV+1+4wHbMuX+PU7Bnekx7Fn8vQ=\", false, function () {\n  return [useNavigate];\n});\nexport default useRoom;","map":{"version":3,"names":["useCallback","roomService","computingService","toast","useNavigate","useRoom","_s","navigate","fetchRoomData","roomId","data","getRoomData","console","log","err","error","extractTextFromPDF","pdfFile","text","removeProfile","roomID","email","senderEmail","result","removeProfileFromRoom","success","addProfile","name","description","addProfileToRoom","extracted_keywords","extractResearchKeywords","fetchTeams","getTeamsByRoom"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useRoom.js"],"sourcesContent":["import { useCallback } from 'react';\nimport roomService from '../services/roomService';\nimport computingService from '../services/computingService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nconst useRoom = () => {\n  const navigate = useNavigate();\n  const fetchRoomData = useCallback(async (roomId) => {\n    try {\n      const data = await roomService.getRoomData(roomId);\n      console.log('data at useRoom page:', data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n\n  const extractTextFromPDF = useCallback(async (pdfFile) => {\n    try {\n      const data = await computingService.extractTextFromPDF(pdfFile);\n      return data.text; // expects { text: '...' }\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract text from PDF.');\n      return '';\n    }\n  }, []);\n\n  const removeProfile = useCallback(async ({ roomID, email, senderEmail }) => {\n    try {\n      const result = await roomService.removeProfileFromRoom({ roomID, email, senderEmail });\n      toast.success('Profile removed successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to remove profile.');\n      throw err;\n    }\n  }, []);\n\n  const addProfile = useCallback(async ({ roomID, name, email, description }) => {\n    try {\n      const result = await roomService.addProfileToRoom({ roomID, name, email, description });\n      toast.success('Profile added successfully.');\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to add profile.');\n      throw err;\n    }\n  }, []);\n\n  const extracted_keywords = useCallback(async (roomID) => {\n    try {\n      const data = await computingService.extractResearchKeywords(roomID);\n      navigate(`/room/${roomID}/profiles`);\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to extract keywords from room.');\n      return [];\n    }\n  }, []);\n\n  const fetchTeams = useCallback(async (roomID) => {\n    try {\n      const data = await roomService.getTeamsByRoom(roomID);\n      return data; \n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load teams data');\n      return [];\n    }\n  }, []);\n\n  return {\n    fetchRoomData,\n    fetchTeams,\n    extractTextFromPDF,\n    addProfile,\n    removeProfile,\n    extracted_keywords,\n  };\n};\n\nexport default useRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}