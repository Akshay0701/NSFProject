{"ast":null,"code":"import{useCallback,useEffect,useState}from'react';import{useNavigate,useParams}from'react-router-dom';import{toast}from'react-toastify';import useRoomPage from'./useRoomPage';import computingService from'../services/computingService';const useTeamPage=()=>{const{roomId}=useParams();const navigate=useNavigate();const{fetchTeams}=useRoomPage();const[teams,setTeams]=useState([]);const[loading,setLoading]=useState(true);const[isGeneratingProposals,setIsGeneratingProposals]=useState(false);const generateProposals=useCallback(async roomID=>{setIsGeneratingProposals(true);try{const result=await computingService.generateProposalsForRoom(roomID);toast.success('Proposals generated successfully!');navigate(`/room/${roomID}/teamswithproposal`);return result;}catch(err){console.error(err);toast.error('Failed to generate proposals.');return null;}finally{setIsGeneratingProposals(false);}},[navigate]);const loadTeams=useCallback(async()=>{try{const teamData=await fetchTeams(roomId);setTeams(teamData||[]);}catch(err){console.error('Error loading teams:',err);toast.error('Failed to load teams');}finally{setLoading(false);}},[roomId,fetchTeams]);const handleGenerateProposals=useCallback(async()=>{try{await generateProposals(roomId);}catch(err){console.error('Proposal generation failed:',err);toast.error('Failed to generate proposals');}},[roomId,generateProposals]);useEffect(()=>{loadTeams();},[loadTeams]);return{roomId,teams,loading,isGeneratingProposals,navigate,handleGenerateProposals};};export default useTeamPage;","map":{"version":3,"names":["useCallback","useEffect","useState","useNavigate","useParams","toast","useRoomPage","computingService","useTeamPage","roomId","navigate","fetchTeams","teams","setTeams","loading","setLoading","isGeneratingProposals","setIsGeneratingProposals","generateProposals","roomID","result","generateProposalsForRoom","success","err","console","error","loadTeams","teamData","handleGenerateProposals"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFProject/src/hooks/useTeamPage.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useRoomPage from './useRoomPage';\nimport computingService from '../services/computingService';\n\nconst useTeamPage = () => {\n  const { roomId } = useParams();\n  const navigate = useNavigate();\n\n  const { fetchTeams } = useRoomPage();\n\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const [isGeneratingProposals, setIsGeneratingProposals] = useState(false);\n\n  const generateProposals = useCallback(async (roomID) => {\n    setIsGeneratingProposals(true);\n    try {\n      const result = await computingService.generateProposalsForRoom(roomID);\n      toast.success('Proposals generated successfully!');\n      navigate(`/room/${roomID}/teamswithproposal`);\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to generate proposals.');\n      return null;\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  }, [navigate]);\n\n  const loadTeams = useCallback(async () => {\n    try {\n      const teamData = await fetchTeams(roomId);\n      setTeams(teamData || []);\n    } catch (err) {\n      console.error('Error loading teams:', err);\n      toast.error('Failed to load teams');\n    } finally {\n      setLoading(false);\n    }\n  }, [roomId, fetchTeams]);\n\n  const handleGenerateProposals = useCallback(async () => {\n    try {\n      await generateProposals(roomId);\n    } catch (err) {\n      console.error('Proposal generation failed:', err);\n      toast.error('Failed to generate proposals');\n    }\n  }, [roomId, generateProposals]);\n\n  useEffect(() => {\n    loadTeams();\n  }, [loadTeams]);\n\n  return {\n    roomId,\n    teams,\n    loading,\n    isGeneratingProposals,\n    navigate,\n    handleGenerateProposals,\n  };\n};\n\nexport default useTeamPage;\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACxD,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACzD,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,gBAAgB,KAAM,8BAA8B,CAE3D,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,MAAO,CAAC,CAAGL,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAM,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAEQ,UAAW,CAAC,CAAGL,WAAW,CAAC,CAAC,CAEpC,KAAM,CAACM,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAACc,qBAAqB,CAAEC,wBAAwB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEzE,KAAM,CAAAgB,iBAAiB,CAAGlB,WAAW,CAAC,KAAO,CAAAmB,MAAM,EAAK,CACtDF,wBAAwB,CAAC,IAAI,CAAC,CAC9B,GAAI,CACF,KAAM,CAAAG,MAAM,CAAG,KAAM,CAAAb,gBAAgB,CAACc,wBAAwB,CAACF,MAAM,CAAC,CACtEd,KAAK,CAACiB,OAAO,CAAC,mCAAmC,CAAC,CAClDZ,QAAQ,CAAC,SAASS,MAAM,oBAAoB,CAAC,CAC7C,MAAO,CAAAC,MAAM,CACf,CAAE,MAAOG,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAClBlB,KAAK,CAACoB,KAAK,CAAC,+BAA+B,CAAC,CAC5C,MAAO,KAAI,CACb,CAAC,OAAS,CACRR,wBAAwB,CAAC,KAAK,CAAC,CACjC,CACF,CAAC,CAAE,CAACP,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAgB,SAAS,CAAG1B,WAAW,CAAC,SAAY,CACxC,GAAI,CACF,KAAM,CAAA2B,QAAQ,CAAG,KAAM,CAAAhB,UAAU,CAACF,MAAM,CAAC,CACzCI,QAAQ,CAACc,QAAQ,EAAI,EAAE,CAAC,CAC1B,CAAE,MAAOJ,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEF,GAAG,CAAC,CAC1ClB,KAAK,CAACoB,KAAK,CAAC,sBAAsB,CAAC,CACrC,CAAC,OAAS,CACRV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACN,MAAM,CAAEE,UAAU,CAAC,CAAC,CAExB,KAAM,CAAAiB,uBAAuB,CAAG5B,WAAW,CAAC,SAAY,CACtD,GAAI,CACF,KAAM,CAAAkB,iBAAiB,CAACT,MAAM,CAAC,CACjC,CAAE,MAAOc,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAEF,GAAG,CAAC,CACjDlB,KAAK,CAACoB,KAAK,CAAC,8BAA8B,CAAC,CAC7C,CACF,CAAC,CAAE,CAAChB,MAAM,CAAES,iBAAiB,CAAC,CAAC,CAE/BjB,SAAS,CAAC,IAAM,CACdyB,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf,MAAO,CACLjB,MAAM,CACNG,KAAK,CACLE,OAAO,CACPE,qBAAqB,CACrBN,QAAQ,CACRkB,uBACF,CAAC,CACH,CAAC,CAED,cAAe,CAAApB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}