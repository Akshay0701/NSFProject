{"ast":null,"code":"import { create } from 'zustand';\nconst initialResearcherProfile = {\n  name: '',\n  affiliation: '',\n  researchArea: '',\n  text: '',\n  pdfFile: null,\n  expanded: true,\n  isProcessingPDF: false,\n  inputMethod: 'text'\n};\nconst MAX_RESEARCHERS = 10;\nconst useProfileStore = create(set => ({\n  profiles: [{\n    ...initialResearcherProfile\n  }],\n  extractedProfiles: [],\n  teams: [],\n  teamsWithProposals: [],\n  // New state for teams with proposals\n  isLoading: false,\n  isCreatingTeams: false,\n  isGeneratingProposals: false,\n  addProfile: () => set(state => {\n    if (state.profiles.length >= MAX_RESEARCHERS) return state;\n    return {\n      profiles: [...state.profiles, {\n        ...initialResearcherProfile\n      }]\n    };\n  }),\n  removeProfile: index => set(state => ({\n    profiles: state.profiles.filter((_, i) => i !== index)\n  })),\n  updateProfile: (index, updatedProfile) => set(state => {\n    const updatedProfiles = [...state.profiles];\n    updatedProfiles[index] = updatedProfile;\n    return {\n      profiles: updatedProfiles\n    };\n  }),\n  setProfiles: profiles => set({\n    profiles\n  }),\n  setExtractedProfiles: extractedProfiles => set({\n    extractedProfiles\n  }),\n  setTeams: teams => set({\n    teams\n  }),\n  setTeamsWithProposals: teamsWithProposals => set({\n    teamsWithProposals\n  }),\n  // New action\n\n  setIsLoading: isLoading => set({\n    isLoading\n  }),\n  setIsCreatingTeams: isCreatingTeams => set({\n    isCreatingTeams\n  }),\n  setIsGeneratingProposals: isGeneratingProposals => set({\n    isGeneratingProposals\n  })\n}));\nexport default useProfileStore;","map":{"version":3,"names":["create","initialResearcherProfile","name","affiliation","researchArea","text","pdfFile","expanded","isProcessingPDF","inputMethod","MAX_RESEARCHERS","useProfileStore","set","profiles","extractedProfiles","teams","teamsWithProposals","isLoading","isCreatingTeams","isGeneratingProposals","addProfile","state","length","removeProfile","index","filter","_","i","updateProfile","updatedProfile","updatedProfiles","setProfiles","setExtractedProfiles","setTeams","setTeamsWithProposals","setIsLoading","setIsCreatingTeams","setIsGeneratingProposals"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFProject/src/store/profileStore.js"],"sourcesContent":["import { create } from 'zustand';\n\nconst initialResearcherProfile = {\n  name: '',\n  affiliation: '',\n  researchArea: '',\n  text: '',\n  pdfFile: null,\n  expanded: true,\n  isProcessingPDF: false,\n  inputMethod: 'text',\n};\n\nconst MAX_RESEARCHERS = 10;\n\nconst useProfileStore = create((set) => ({\n  profiles: [{ ...initialResearcherProfile }],\n  extractedProfiles: [],\n  teams: [],\n  teamsWithProposals: [], // New state for teams with proposals\n  isLoading: false,\n  isCreatingTeams: false,\n  isGeneratingProposals: false,\n\n  addProfile: () =>\n    set((state) => {\n      if (state.profiles.length >= MAX_RESEARCHERS) return state;\n      return { profiles: [...state.profiles, { ...initialResearcherProfile }] };\n    }),\n\n  removeProfile: (index) =>\n    set((state) => ({\n      profiles: state.profiles.filter((_, i) => i !== index),\n    })),\n\n  updateProfile: (index, updatedProfile) =>\n    set((state) => {\n      const updatedProfiles = [...state.profiles];\n      updatedProfiles[index] = updatedProfile;\n      return { profiles: updatedProfiles };\n    }),\n\n  setProfiles: (profiles) => set({ profiles }),\n\n  setExtractedProfiles: (extractedProfiles) => set({ extractedProfiles }),\n\n  setTeams: (teams) => set({ teams }),\n\n  setTeamsWithProposals: (teamsWithProposals) => set({ teamsWithProposals }), // New action\n\n  setIsLoading: (isLoading) => set({ isLoading }),\n\n  setIsCreatingTeams: (isCreatingTeams) => set({ isCreatingTeams }),\n\n  setIsGeneratingProposals: (isGeneratingProposals) =>\n    set({ isGeneratingProposals }),\n}));\n\nexport default useProfileStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,MAAMC,wBAAwB,GAAG;EAC/BC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,eAAe,EAAE,KAAK;EACtBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,eAAe,GAAG,EAAE;AAE1B,MAAMC,eAAe,GAAGX,MAAM,CAAEY,GAAG,KAAM;EACvCC,QAAQ,EAAE,CAAC;IAAE,GAAGZ;EAAyB,CAAC,CAAC;EAC3Ca,iBAAiB,EAAE,EAAE;EACrBC,KAAK,EAAE,EAAE;EACTC,kBAAkB,EAAE,EAAE;EAAE;EACxBC,SAAS,EAAE,KAAK;EAChBC,eAAe,EAAE,KAAK;EACtBC,qBAAqB,EAAE,KAAK;EAE5BC,UAAU,EAAEA,CAAA,KACVR,GAAG,CAAES,KAAK,IAAK;IACb,IAAIA,KAAK,CAACR,QAAQ,CAACS,MAAM,IAAIZ,eAAe,EAAE,OAAOW,KAAK;IAC1D,OAAO;MAAER,QAAQ,EAAE,CAAC,GAAGQ,KAAK,CAACR,QAAQ,EAAE;QAAE,GAAGZ;MAAyB,CAAC;IAAE,CAAC;EAC3E,CAAC,CAAC;EAEJsB,aAAa,EAAGC,KAAK,IACnBZ,GAAG,CAAES,KAAK,KAAM;IACdR,QAAQ,EAAEQ,KAAK,CAACR,QAAQ,CAACY,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK;EACvD,CAAC,CAAC,CAAC;EAELI,aAAa,EAAEA,CAACJ,KAAK,EAAEK,cAAc,KACnCjB,GAAG,CAAES,KAAK,IAAK;IACb,MAAMS,eAAe,GAAG,CAAC,GAAGT,KAAK,CAACR,QAAQ,CAAC;IAC3CiB,eAAe,CAACN,KAAK,CAAC,GAAGK,cAAc;IACvC,OAAO;MAAEhB,QAAQ,EAAEiB;IAAgB,CAAC;EACtC,CAAC,CAAC;EAEJC,WAAW,EAAGlB,QAAQ,IAAKD,GAAG,CAAC;IAAEC;EAAS,CAAC,CAAC;EAE5CmB,oBAAoB,EAAGlB,iBAAiB,IAAKF,GAAG,CAAC;IAAEE;EAAkB,CAAC,CAAC;EAEvEmB,QAAQ,EAAGlB,KAAK,IAAKH,GAAG,CAAC;IAAEG;EAAM,CAAC,CAAC;EAEnCmB,qBAAqB,EAAGlB,kBAAkB,IAAKJ,GAAG,CAAC;IAAEI;EAAmB,CAAC,CAAC;EAAE;;EAE5EmB,YAAY,EAAGlB,SAAS,IAAKL,GAAG,CAAC;IAAEK;EAAU,CAAC,CAAC;EAE/CmB,kBAAkB,EAAGlB,eAAe,IAAKN,GAAG,CAAC;IAAEM;EAAgB,CAAC,CAAC;EAEjEmB,wBAAwB,EAAGlB,qBAAqB,IAC9CP,GAAG,CAAC;IAAEO;EAAsB,CAAC;AACjC,CAAC,CAAC,CAAC;AAEH,eAAeR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}