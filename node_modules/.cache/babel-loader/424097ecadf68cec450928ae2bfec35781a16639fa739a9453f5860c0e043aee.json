{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useRoomPage from './useRoomPage';\nconst useTeamsWithProposals = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    fetchTeams,\n    isLoading\n  } = useRoomPage();\n  const [teamsWithProposals, setTeamsWithProposals] = useState([]);\n  const loadTeams = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const teams = await fetchTeams(roomId);\n      setTeamsWithProposals(teams);\n    } catch (err) {\n      console.error('Error loading teams with proposals:', err);\n    }\n  }, [roomId, fetchTeams]);\n  useEffect(() => {\n    loadTeams();\n  }, [loadTeams]);\n  return {\n    roomId,\n    navigate,\n    teamsWithProposals,\n    isLoading\n  };\n};\n_s(useTeamsWithProposals, \"WKEJye2NdxOnmiFu9bmxm7zdsrA=\", false, function () {\n  return [useParams, useNavigate, useRoomPage];\n});\nexport default useTeamsWithProposals;","map":{"version":3,"names":["useCallback","useEffect","useState","useNavigate","useParams","useRoomPage","useTeamsWithProposals","_s","roomId","navigate","fetchTeams","isLoading","teamsWithProposals","setTeamsWithProposals","loadTeams","teams","err","console","error"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useTeamsWithProposals.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useRoomPage from './useRoomPage';\n\nconst useTeamsWithProposals = () => {\n  const { roomId } = useParams();\n  const navigate = useNavigate();\n  const { fetchTeams, isLoading } = useRoomPage();\n\n  const [teamsWithProposals, setTeamsWithProposals] = useState([]);\n\n  const loadTeams = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const teams = await fetchTeams(roomId);\n      setTeamsWithProposals(teams);\n    } catch (err) {\n      console.error('Error loading teams with proposals:', err);\n    }\n  }, [roomId, fetchTeams]);\n\n  useEffect(() => {\n    loadTeams();\n  }, [loadTeams]);\n\n  return {\n    roomId,\n    navigate,\n    teamsWithProposals,\n    isLoading\n  };\n};\n\nexport default useTeamsWithProposals;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAO,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAC9B,MAAMK,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,UAAU;IAAEC;EAAU,CAAC,GAAGN,WAAW,CAAC,CAAC;EAE/C,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMY,SAAS,GAAGd,WAAW,CAAC,YAAY;IACxC,IAAI,CAACQ,MAAM,EAAE;IACb,IAAI;MACF,MAAMO,KAAK,GAAG,MAAML,UAAU,CAACF,MAAM,CAAC;MACtCK,qBAAqB,CAACE,KAAK,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,GAAG,CAAC;IAC3D;EACF,CAAC,EAAE,CAACR,MAAM,EAAEE,UAAU,CAAC,CAAC;EAExBT,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,OAAO;IACLN,MAAM;IACNC,QAAQ;IACRG,kBAAkB;IAClBD;EACF,CAAC;AACH,CAAC;AAACJ,EAAA,CA3BID,qBAAqB;EAAA,QACNF,SAAS,EACXD,WAAW,EACME,WAAW;AAAA;AA0B/C,eAAeC,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}