{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useProfileStore from '../store/profileStore';\nimport nsfService from '../services/nsfService';\nconst useCreateTeams = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    extractedProfiles,\n    setIsCreatingTeams,\n    setTeams\n  } = useProfileStore();\n  const createTeams = async () => {\n    if (extractedProfiles.length === 0) return;\n    setIsCreatingTeams(true);\n    try {\n      const data = await nsfService.createTeams(extractedProfiles);\n      setTeams(data); // Store the teams in Zustand\n      navigate('/teams');\n    } catch (error) {\n      console.error(error);\n      toast.error('Error creating teams. Please try again.');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n  return {\n    createTeams\n  };\n};\n_s(useCreateTeams, \"XGi5KEQWT7OjZ/+ddlxWlQBH4fw=\", false, function () {\n  return [useNavigate, useProfileStore];\n});\nexport default useCreateTeams;","map":{"version":3,"names":["useNavigate","toast","useProfileStore","nsfService","useCreateTeams","_s","navigate","extractedProfiles","setIsCreatingTeams","setTeams","createTeams","length","data","error","console"],"sources":["/Users/akshayjadhav/Documents/GAWork/NSFProject/src/hooks/useCreateTeams.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useProfileStore from '../store/profileStore';\nimport nsfService from '../services/nsfService';\n\nconst useCreateTeams = () => {\n  const navigate = useNavigate();\n  const { extractedProfiles, setIsCreatingTeams, setTeams } = useProfileStore();\n\n  const createTeams = async () => {\n    if (extractedProfiles.length === 0) return;\n\n    setIsCreatingTeams(true);\n\n    try {\n      const data = await nsfService.createTeams(extractedProfiles);\n      setTeams(data); // Store the teams in Zustand\n      navigate('/teams');\n    } catch (error) {\n      console.error(error);\n      toast.error('Error creating teams. Please try again.');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n\n  return { createTeams };\n};\n\nexport default useCreateTeams;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,iBAAiB;IAAEC,kBAAkB;IAAEC;EAAS,CAAC,GAAGP,eAAe,CAAC,CAAC;EAE7E,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIH,iBAAiB,CAACI,MAAM,KAAK,CAAC,EAAE;IAEpCH,kBAAkB,CAAC,IAAI,CAAC;IAExB,IAAI;MACF,MAAMI,IAAI,GAAG,MAAMT,UAAU,CAACO,WAAW,CAACH,iBAAiB,CAAC;MAC5DE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAChBN,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBZ,KAAK,CAACY,KAAK,CAAC,yCAAyC,CAAC;IACxD,CAAC,SAAS;MACRL,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,OAAO;IAAEE;EAAY,CAAC;AACxB,CAAC;AAACL,EAAA,CAtBID,cAAc;EAAA,QACDJ,WAAW,EACgCE,eAAe;AAAA;AAsB7E,eAAeE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}