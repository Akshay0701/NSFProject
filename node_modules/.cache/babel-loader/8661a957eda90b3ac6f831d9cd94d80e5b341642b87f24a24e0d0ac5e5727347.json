{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport useProfileStore from '../store/profileStore';\nconst useCreateTeams = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    extractedProfiles,\n    setIsCreatingTeams\n  } = useProfileStore();\n  const createTeams = async () => {\n    if (extractedProfiles.length === 0) return;\n    setIsCreatingTeams(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/nsf/teamcreation', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(extractedProfiles)\n      });\n      if (!response.ok) throw new Error('Failed to create teams');\n      const data = await response.json();\n      navigate('/teams', {\n        state: {\n          teams: data\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      alert('Error creating teams. Please try again.');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n  return {\n    createTeams\n  };\n};\n_s(useCreateTeams, \"Y0POf0Bi84WLVpf34yvha9h+mqQ=\", false, function () {\n  return [useNavigate, useProfileStore];\n});\nexport default useCreateTeams;","map":{"version":3,"names":["useNavigate","useProfileStore","useCreateTeams","_s","navigate","extractedProfiles","setIsCreatingTeams","createTeams","length","response","fetch","method","mode","headers","body","JSON","stringify","ok","Error","data","json","state","teams","error","console","alert"],"sources":["/Users/akshayjadhav/Documents/GAWork/NSFProject/src/hooks/useCreateTeams.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport useProfileStore from '../store/profileStore';\n\nconst useCreateTeams = () => {\n  const navigate = useNavigate();\n  const { extractedProfiles, setIsCreatingTeams } = useProfileStore();\n\n  const createTeams = async () => {\n    if (extractedProfiles.length === 0) return;\n\n    setIsCreatingTeams(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/nsf/teamcreation', {\n        method: 'POST',\n        mode: 'cors',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(extractedProfiles),\n      });\n\n      if (!response.ok) throw new Error('Failed to create teams');\n      const data = await response.json();\n      navigate('/teams', { state: { teams: data } });\n    } catch (error) {\n      console.error(error);\n      alert('Error creating teams. Please try again.');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n\n  return { createTeams };\n};\n\nexport default useCreateTeams;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,uBAAuB;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEK,iBAAiB;IAAEC;EAAmB,CAAC,GAAGL,eAAe,CAAC,CAAC;EAEnE,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIF,iBAAiB,CAACG,MAAM,KAAK,CAAC,EAAE;IAEpCF,kBAAkB,CAAC,IAAI,CAAC;IAExB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,iBAAiB;MACxC,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3D,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClChB,QAAQ,CAAC,QAAQ,EAAE;QAAEiB,KAAK,EAAE;UAAEC,KAAK,EAAEH;QAAK;MAAE,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,SAAS;MACRnB,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,OAAO;IAAEC;EAAY,CAAC;AACxB,CAAC;AAACJ,EAAA,CA7BID,cAAc;EAAA,QACDF,WAAW,EACsBC,eAAe;AAAA;AA6BnE,eAAeC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}