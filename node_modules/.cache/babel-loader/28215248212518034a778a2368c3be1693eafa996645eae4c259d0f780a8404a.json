{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport computingService from '../services/computingService';\nimport roomService from '../services/roomService';\nconst useProfilePage = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [profiles, setProfiles] = useState({});\n  const [isCreatingTeams, setIsCreatingTeams] = useState(false);\n  const createTeams = async roomID => {\n    setIsCreatingTeams(true);\n    try {\n      const data = await roomService.createTeamsFromRoom(roomID);\n      toast.success('Teams created successfully!');\n      navigate(`/room/${roomID}/teams`);\n      return data;\n    } catch (err) {\n      console.error('Create teams error:', err);\n      toast.error(err.message || 'Failed to create teams');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n  const fetchExtractedKeywords = useCallback(async roomID => {\n    try {\n      const data = await computingService.getExtractedKeywords(roomID);\n      return data || [];\n    } catch (error) {\n      console.error('Error fetching extracted keywords:', error);\n      toast.error('Failed to fetch extracted keywords.');\n      return [];\n    }\n  }, []);\n  const loadProfiles = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const {\n        keywords\n      } = await fetchExtractedKeywords(roomId);\n      setProfiles(keywords || {});\n    } catch (error) {\n      toast.error(\"Failed to load research profiles.\");\n    }\n  }, [roomId, fetchExtractedKeywords]);\n  const handleGenerateTeams = useCallback(async () => {\n    if (!roomId) return;\n    await createTeams(roomId);\n  }, [roomId, createTeams]);\n  useEffect(() => {\n    loadProfiles();\n  }, [loadProfiles]);\n  return {\n    profiles,\n    roomId,\n    navigate,\n    isCreatingTeams,\n    handleGenerateTeams\n  };\n};\n_s(useProfilePage, \"R3FfHzqbg/LtKhCaj7+msV5/99c=\", false, function () {\n  return [useParams, useNavigate];\n});\nexport default useProfilePage;","map":{"version":3,"names":["useCallback","useEffect","useState","useNavigate","useParams","toast","computingService","roomService","useProfilePage","_s","roomId","navigate","profiles","setProfiles","isCreatingTeams","setIsCreatingTeams","createTeams","roomID","data","createTeamsFromRoom","success","err","console","error","message","fetchExtractedKeywords","getExtractedKeywords","loadProfiles","keywords","handleGenerateTeams"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useProfilePage.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport computingService from '../services/computingService';\nimport roomService from '../services/roomService';\n\n\nconst useProfilePage = () => {\n  const { roomId } = useParams();\n  const navigate = useNavigate();\n\n  const [profiles, setProfiles] = useState({});\n\n  const [isCreatingTeams, setIsCreatingTeams] = useState(false);\n\n  const createTeams = async (roomID) => {\n    setIsCreatingTeams(true);\n    try {\n      const data = await roomService.createTeamsFromRoom(roomID);\n      toast.success('Teams created successfully!');\n      navigate(`/room/${roomID}/teams`);\n      return data;\n    } catch (err) {\n      console.error('Create teams error:', err);\n      toast.error(err.message || 'Failed to create teams');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n\n  const fetchExtractedKeywords = useCallback(async (roomID) => {\n    try {\n      const data = await computingService.getExtractedKeywords(roomID);\n      return data || [];\n    } catch (error) {\n      console.error('Error fetching extracted keywords:', error);\n      toast.error('Failed to fetch extracted keywords.');\n      return [];\n    }\n  }, []);\n\n  const loadProfiles = useCallback(async () => {\n    if (!roomId) return;\n    try {\n      const {keywords} = await fetchExtractedKeywords(roomId);\n      setProfiles(keywords || {});\n    } catch (error) {\n      toast.error(\"Failed to load research profiles.\");\n    }\n  }, [roomId, fetchExtractedKeywords]);\n\n  const handleGenerateTeams = useCallback(async () => {\n    if (!roomId) return;\n    await createTeams(roomId);\n  }, [roomId, createTeams]);\n\n  useEffect(() => {\n    loadProfiles();\n  }, [loadProfiles]);\n\n  return {\n    profiles,\n    roomId,\n    navigate,\n    isCreatingTeams,\n    handleGenerateTeams,\n  };\n};\n\nexport default useProfilePage;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,WAAW,MAAM,yBAAyB;AAGjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMc,WAAW,GAAG,MAAOC,MAAM,IAAK;IACpCF,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMX,WAAW,CAACY,mBAAmB,CAACF,MAAM,CAAC;MAC1DZ,KAAK,CAACe,OAAO,CAAC,6BAA6B,CAAC;MAC5CT,QAAQ,CAAC,SAASM,MAAM,QAAQ,CAAC;MACjC,OAAOC,IAAI;IACb,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;MACzChB,KAAK,CAACkB,KAAK,CAACF,GAAG,CAACG,OAAO,IAAI,wBAAwB,CAAC;IACtD,CAAC,SAAS;MACRT,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAMU,sBAAsB,GAAGzB,WAAW,CAAC,MAAOiB,MAAM,IAAK;IAC3D,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMZ,gBAAgB,CAACoB,oBAAoB,CAACT,MAAM,CAAC;MAChE,OAAOC,IAAI,IAAI,EAAE;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DlB,KAAK,CAACkB,KAAK,CAAC,qCAAqC,CAAC;MAClD,OAAO,EAAE;IACX;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG3B,WAAW,CAAC,YAAY;IAC3C,IAAI,CAACU,MAAM,EAAE;IACb,IAAI;MACF,MAAM;QAACkB;MAAQ,CAAC,GAAG,MAAMH,sBAAsB,CAACf,MAAM,CAAC;MACvDG,WAAW,CAACe,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdlB,KAAK,CAACkB,KAAK,CAAC,mCAAmC,CAAC;IAClD;EACF,CAAC,EAAE,CAACb,MAAM,EAAEe,sBAAsB,CAAC,CAAC;EAEpC,MAAMI,mBAAmB,GAAG7B,WAAW,CAAC,YAAY;IAClD,IAAI,CAACU,MAAM,EAAE;IACb,MAAMM,WAAW,CAACN,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACA,MAAM,EAAEM,WAAW,CAAC,CAAC;EAEzBf,SAAS,CAAC,MAAM;IACd0B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,OAAO;IACLf,QAAQ;IACRF,MAAM;IACNC,QAAQ;IACRG,eAAe;IACfe;EACF,CAAC;AACH,CAAC;AAACpB,EAAA,CA5DID,cAAc;EAAA,QACCJ,SAAS,EACXD,WAAW;AAAA;AA4D9B,eAAeK,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}