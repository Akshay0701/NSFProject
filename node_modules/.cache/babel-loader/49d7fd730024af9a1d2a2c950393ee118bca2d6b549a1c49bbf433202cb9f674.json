{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useProfileStore from '../store/profileStore';\nimport nsfService from '../services/nsfService';\nconst useGenerateProposals = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    teams,\n    setIsGeneratingProposals,\n    setTeamsWithProposals\n  } = useProfileStore();\n  const generateProposals = async () => {\n    if (teams.length === 0) return;\n    setIsGeneratingProposals(true);\n    try {\n      const data = await nsfService.generateProposals(teams);\n      setTeamsWithProposals(data); // Store the teams with proposals in Zustand\n      navigate('/teamswithproposal');\n    } catch (error) {\n      console.error(error);\n      toast.error('Error generating proposals. Please try again later.');\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  };\n  return {\n    generateProposals\n  };\n};\n_s(useGenerateProposals, \"mwOBuOdM+KqYmOWm5LmL4yCqS68=\", false, function () {\n  return [useNavigate, useProfileStore];\n});\nexport default useGenerateProposals;","map":{"version":3,"names":["useNavigate","toast","useProfileStore","nsfService","useGenerateProposals","_s","navigate","teams","setIsGeneratingProposals","setTeamsWithProposals","generateProposals","length","data","error","console"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFProject/src/hooks/useGenerateProposals.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useProfileStore from '../store/profileStore';\nimport nsfService from '../services/nsfService';\n\nconst useGenerateProposals = () => {\n  const navigate = useNavigate();\n  const { teams, setIsGeneratingProposals, setTeamsWithProposals } = useProfileStore();\n\n  const generateProposals = async () => {\n    if (teams.length === 0) return;\n\n    setIsGeneratingProposals(true);\n\n    try {\n      const data = await nsfService.generateProposals(teams);\n      setTeamsWithProposals(data); // Store the teams with proposals in Zustand\n      navigate('/teamswithproposal');\n    } catch (error) {\n      console.error(error);\n      toast.error('Error generating proposals. Please try again later.');\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  };\n\n  return { generateProposals };\n};\n\nexport default useGenerateProposals;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,KAAK;IAAEC,wBAAwB;IAAEC;EAAsB,CAAC,GAAGP,eAAe,CAAC,CAAC;EAEpF,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIH,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;IAExBH,wBAAwB,CAAC,IAAI,CAAC;IAE9B,IAAI;MACF,MAAMI,IAAI,GAAG,MAAMT,UAAU,CAACO,iBAAiB,CAACH,KAAK,CAAC;MACtDE,qBAAqB,CAACG,IAAI,CAAC,CAAC,CAAC;MAC7BN,QAAQ,CAAC,oBAAoB,CAAC;IAChC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBZ,KAAK,CAACY,KAAK,CAAC,qDAAqD,CAAC;IACpE,CAAC,SAAS;MACRL,wBAAwB,CAAC,KAAK,CAAC;IACjC;EACF,CAAC;EAED,OAAO;IAAEE;EAAkB,CAAC;AAC9B,CAAC;AAACL,EAAA,CAtBID,oBAAoB;EAAA,QACPJ,WAAW,EACuCE,eAAe;AAAA;AAsBpF,eAAeE,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}