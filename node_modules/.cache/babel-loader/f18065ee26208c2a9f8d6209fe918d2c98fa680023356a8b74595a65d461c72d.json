{"ast":null,"code":"import{useState}from'react';import{toast}from'react-toastify';import{useNavigate}from'react-router-dom';import authService from'../services/authService';const useLoginPage=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[loading,setLoading]=useState(false);const[showPassword,setShowPassword]=useState(false);const navigate=useNavigate();const loginUser=async(email,password)=>{try{const data=await authService.login(email,password);toast.success('Login successful!');localStorage.setItem('authToken',data.tokens.AccessToken);// store token if needed\nlocalStorage.setItem('userEmail',email);// store token if needed\nnavigate('/intro');}catch(error){console.error('Login error:',error.message);toast.error(error.message);}};const handleLogin=async e=>{e.preventDefault();if(!email||!password){toast.error('Please enter both email and password.');return;}setLoading(true);await loginUser(email,password);setLoading(false);};const togglePasswordVisibility=()=>{setShowPassword(prev=>!prev);};return{email,setEmail,password,setPassword,loading,showPassword,togglePasswordVisibility,handleLogin};};export default useLoginPage;","map":{"version":3,"names":["useState","toast","useNavigate","authService","useLoginPage","email","setEmail","password","setPassword","loading","setLoading","showPassword","setShowPassword","navigate","loginUser","data","login","success","localStorage","setItem","tokens","AccessToken","error","console","message","handleLogin","e","preventDefault","togglePasswordVisibility","prev"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFProject/src/hooks/useLoginPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport authService from '../services/authService';\n\nconst useLoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const loginUser = async (email, password) => {\n    try {\n      const data = await authService.login(email, password);\n      toast.success('Login successful!');\n      localStorage.setItem('authToken', data.tokens.AccessToken); // store token if needed\n      localStorage.setItem('userEmail', email); // store token if needed\n      navigate('/intro');\n    } catch (error) {\n      console.error('Login error:', error.message);\n      toast.error(error.message);\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.error('Please enter both email and password.');\n      return;\n    }\n\n    setLoading(true);\n    await loginUser(email, password);\n    setLoading(false);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    loading,\n    showPassword,\n    togglePasswordVisibility,\n    handleLogin,\n  };\n};\n\nexport default useLoginPage;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CAEjD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACO,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACW,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,SAAS,CAAG,KAAAA,CAAOT,KAAK,CAAEE,QAAQ,GAAK,CAC3C,GAAI,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAZ,WAAW,CAACa,KAAK,CAACX,KAAK,CAAEE,QAAQ,CAAC,CACrDN,KAAK,CAACgB,OAAO,CAAC,mBAAmB,CAAC,CAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAEJ,IAAI,CAACK,MAAM,CAACC,WAAW,CAAC,CAAE;AAC5DH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAEd,KAAK,CAAC,CAAE;AAC1CQ,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAACE,OAAO,CAAC,CAC5CvB,KAAK,CAACqB,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACtB,KAAK,EAAI,CAACE,QAAQ,CAAE,CACvBN,KAAK,CAACqB,KAAK,CAAC,uCAAuC,CAAC,CACpD,OACF,CAEAZ,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAI,SAAS,CAACT,KAAK,CAAEE,QAAQ,CAAC,CAChCG,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,KAAM,CAAAkB,wBAAwB,CAAGA,CAAA,GAAM,CACrChB,eAAe,CAAEiB,IAAI,EAAK,CAACA,IAAI,CAAC,CAClC,CAAC,CAED,MAAO,CACLxB,KAAK,CACLC,QAAQ,CACRC,QAAQ,CACRC,WAAW,CACXC,OAAO,CACPE,YAAY,CACZiB,wBAAwB,CACxBH,WACF,CAAC,CACH,CAAC,CAED,cAAe,CAAArB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}