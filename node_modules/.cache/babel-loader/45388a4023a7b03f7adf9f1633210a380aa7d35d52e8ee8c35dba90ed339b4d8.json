{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('authToken');\n  if (!token) return false;\n  try {\n    const decoded = jwtDecode(token); // ✅ use named import\n    return Date.now() < decoded.exp * 1000;\n  } catch {\n    return false;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userEmail');\n};","map":{"version":3,"names":["jwtDecode","isAuthenticated","token","localStorage","getItem","decoded","Date","now","exp","logout","removeItem"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/utils/auth.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\n\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('authToken');\n  if (!token) return false;\n\n  try {\n    const decoded = jwtDecode(token); // ✅ use named import\n    return Date.now() < decoded.exp * 1000;\n  } catch {\n    return false;\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userEmail');\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF,MAAMG,OAAO,GAAGL,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;IAClC,OAAOI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,OAAO,CAACG,GAAG,GAAG,IAAI;EACxC,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BN,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;EACpCP,YAAY,CAACO,UAAU,CAAC,WAAW,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}