{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport roomService from '../services/roomService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nconst useGenerateProposals = () => {\n  _s();\n  const [isGeneratingProposals, setIsGeneratingProposals] = useState(false);\n  const navigate = useNavigate();\n  const generateProposals = useCallback(async roomID => {\n    setIsGeneratingProposals(true);\n    try {\n      const result = await roomService.generateProposalsForRoom(roomID);\n      toast.success('Proposals generated successfully!');\n      navigate(`/room/${roomID}/teamswithproposal`);\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to generate proposals.');\n      return null;\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  }, [navigate]);\n  return {\n    generateProposals,\n    isGeneratingProposals\n  };\n};\n_s(useGenerateProposals, \"hPKfpuohfGVKOCMGxAkx6niUONc=\", false, function () {\n  return [useNavigate];\n});\nexport default useGenerateProposals;","map":{"version":3,"names":["useCallback","useState","roomService","toast","useNavigate","useGenerateProposals","_s","isGeneratingProposals","setIsGeneratingProposals","navigate","generateProposals","roomID","result","generateProposalsForRoom","success","err","console","error"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useGenerateProposals.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport roomService from '../services/roomService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nconst useGenerateProposals = () => {\n  const [isGeneratingProposals, setIsGeneratingProposals] = useState(false);\n  const navigate = useNavigate();\n\n  const generateProposals = useCallback(async (roomID) => {\n    setIsGeneratingProposals(true);\n    try {\n      const result = await roomService.generateProposalsForRoom(roomID);\n      toast.success('Proposals generated successfully!');\n      navigate(`/room/${roomID}/teamswithproposal`);\n      return result;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to generate proposals.');\n      return null;\n    } finally {\n      setIsGeneratingProposals(false);\n    }\n  }, [navigate]);\n\n  return { generateProposals, isGeneratingProposals };\n};\n\nexport default useGenerateProposals;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAMQ,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,iBAAiB,GAAGV,WAAW,CAAC,MAAOW,MAAM,IAAK;IACtDH,wBAAwB,CAAC,IAAI,CAAC;IAC9B,IAAI;MACF,MAAMI,MAAM,GAAG,MAAMV,WAAW,CAACW,wBAAwB,CAACF,MAAM,CAAC;MACjER,KAAK,CAACW,OAAO,CAAC,mCAAmC,CAAC;MAClDL,QAAQ,CAAC,SAASE,MAAM,oBAAoB,CAAC;MAC7C,OAAOC,MAAM;IACf,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBZ,KAAK,CAACc,KAAK,CAAC,+BAA+B,CAAC;MAC5C,OAAO,IAAI;IACb,CAAC,SAAS;MACRT,wBAAwB,CAAC,KAAK,CAAC;IACjC;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEC,iBAAiB;IAAEH;EAAsB,CAAC;AACrD,CAAC;AAACD,EAAA,CArBID,oBAAoB;EAAA,QAEPD,WAAW;AAAA;AAqB9B,eAAeC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}