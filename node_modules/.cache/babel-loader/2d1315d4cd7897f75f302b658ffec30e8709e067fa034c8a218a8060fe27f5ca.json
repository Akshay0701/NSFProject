{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport roomService from '../services/roomService';\nimport { toast } from 'react-toastify';\nconst useRoom = () => {\n  _s();\n  const fetchRoomData = useCallback(async roomId => {\n    try {\n      const data = await roomService.getRoom(roomId);\n      console.log('data at useroom page:', data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n  return {\n    fetchRoomData\n  };\n};\n_s(useRoom, \"4/kndwZscfn3r8uaJxGC3Vd4XnU=\");\nexport default useRoom;","map":{"version":3,"names":["useCallback","roomService","toast","useRoom","_s","fetchRoomData","roomId","data","getRoom","console","log","err","error"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useRoom.js"],"sourcesContent":["import { useCallback } from 'react';\nimport roomService from '../services/roomService';\nimport { toast } from 'react-toastify';\n\nconst useRoom = () => {\n  const fetchRoomData = useCallback(async (roomId) => {\n    try {\n      const data = await roomService.getRoom(roomId);\n      console.log('data at useroom page:', data);\n      return data;\n    } catch (err) {\n      console.error(err);\n      toast.error('Failed to load room data.');\n      return null;\n    }\n  }, []);\n\n  return { fetchRoomData };\n};\n\nexport default useRoom;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,aAAa,GAAGL,WAAW,CAAC,MAAOM,MAAM,IAAK;IAClD,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMN,WAAW,CAACO,OAAO,CAACF,MAAM,CAAC;MAC9CG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,IAAI,CAAC;MAC1C,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;MAClBT,KAAK,CAACU,KAAK,CAAC,2BAA2B,CAAC;MACxC,OAAO,IAAI;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEP;EAAc,CAAC;AAC1B,CAAC;AAACD,EAAA,CAdID,OAAO;AAgBb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}