{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:5000/room';\nconst getRoomData = async roomId => {\n  const response = await fetch(`${BASE_URL}/get-room/${roomId}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch room data');\n  }\n  return await response.json();\n};\nconst addProfileToRoom = async formData => {\n  const response = await fetch(`${BASE_URL}/add-profile`, {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add profile to room');\n  }\n  return response.json();\n};\nconst removeProfileFromRoom = async ({\n  roomID,\n  email\n}) => {\n  const response = await fetch(`${BASE_URL}/remove-profile`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      RoomID: roomID,\n      email\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to remove profile from room');\n  }\n  return response.json();\n};\nexport default {\n  getRoomData,\n  addProfileToRoom,\n  removeProfileFromRoom\n};","map":{"version":3,"names":["BASE_URL","getRoomData","roomId","response","fetch","ok","Error","json","addProfileToRoom","formData","method","body","error","removeProfileFromRoom","roomID","email","headers","JSON","stringify","RoomID"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/services/roomService.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:5000/room';\n\nconst getRoomData = async (roomId) => {\n    const response = await fetch(`${BASE_URL}/get-room/${roomId}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch room data');\n    }\n    return await response.json();\n};\n\nconst addProfileToRoom = async (formData) => {\n  const response = await fetch(`${BASE_URL}/add-profile`, {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add profile to room');\n  }\n\n  return response.json();\n};\n\nconst removeProfileFromRoom = async ({ roomID, email }) => {\n  const response = await fetch(`${BASE_URL}/remove-profile`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ RoomID: roomID, email }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to remove profile from room');\n  }\n\n  return response.json();\n};\n\nexport default {\n  getRoomData,\n  addProfileToRoom,\n  removeProfileFromRoom,\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAaE,MAAM,EAAE,CAAC;EAC9D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAC3C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,cAAc,EAAE;IACtDU,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEF;EACR,CAAC,CAAC;EAEF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMO,KAAK,GAAG,MAAMT,QAAQ,CAACI,IAAI,CAAC,CAAC;IACnC,MAAM,IAAID,KAAK,CAACM,KAAK,CAACA,KAAK,IAAI,+BAA+B,CAAC;EACjE;EAEA,OAAOT,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMM,qBAAqB,GAAG,MAAAA,CAAO;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EACzD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,iBAAiB,EAAE;IACzDU,MAAM,EAAE,MAAM;IACdM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAEL,MAAM;MAAEC;IAAM,CAAC;EAChD,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMO,KAAK,GAAG,MAAMT,QAAQ,CAACI,IAAI,CAAC,CAAC;IACnC,MAAM,IAAID,KAAK,CAACM,KAAK,CAACA,KAAK,IAAI,oCAAoC,CAAC;EACtE;EAEA,OAAOT,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,eAAe;EACbN,WAAW;EACXO,gBAAgB;EAChBK;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}