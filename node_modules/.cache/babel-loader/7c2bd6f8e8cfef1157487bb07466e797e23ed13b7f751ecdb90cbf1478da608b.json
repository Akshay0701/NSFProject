{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:5000/room';\nconst getRoomData = async roomId => {\n  const response = await fetch(`http://127.0.0.1:5000/room/get-room/${roomId}`);\n  if (!response.ok) {\n    throw new Error('Room not found');\n  }\n  const data = await response.json();\n  return data;\n};\nconst addProfileToRoom = async ({\n  roomID,\n  name,\n  email,\n  description\n}) => {\n  const response = await fetch(`${BASE_URL}/add-profile`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      RoomID: roomID,\n      name,\n      email,\n      description\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add profile to room');\n  }\n  return response.json();\n};\nconst removeProfileFromRoom = async ({\n  roomID,\n  email\n}) => {\n  const response = await fetch(`${BASE_URL}/remove-profile`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      RoomID: roomID,\n      email\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to remove profile from room');\n  }\n  return response.json();\n};\nexport default {\n  getRoomData,\n  addProfileToRoom,\n  removeProfileFromRoom\n};","map":{"version":3,"names":["BASE_URL","getRoomData","roomId","response","fetch","ok","Error","data","json","addProfileToRoom","roomID","name","email","description","method","headers","body","JSON","stringify","RoomID","error","removeProfileFromRoom"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/services/roomService.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:5000/room';\n\nconst getRoomData = async (roomId) => {\n    const response = await fetch(`http://127.0.0.1:5000/room/get-room/${roomId}`);\n    if (!response.ok) {\n        throw new Error('Room not found');\n    }\n    const data = await response.json();\n    return data;\n};\n\nconst addProfileToRoom = async ({ roomID, name, email, description }) => {\n  const response = await fetch(`${BASE_URL}/add-profile`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ RoomID: roomID, name, email, description }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to add profile to room');\n  }\n\n  return response.json();\n};\n\nconst removeProfileFromRoom = async ({ roomID, email }) => {\n  const response = await fetch(`${BASE_URL}/remove-profile`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ RoomID: roomID, email }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to remove profile from room');\n  }\n\n  return response.json();\n};\n\nexport default {\n  getRoomData,\n  addProfileToRoom,\n  removeProfileFromRoom,\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCF,MAAM,EAAE,CAAC;EAC7E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;EACrC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAAA,CAAO;EAAEC,MAAM;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EACvE,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,cAAc,EAAE;IACtDc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAET,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAY,CAAC;EACnE,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMe,KAAK,GAAG,MAAMjB,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIF,KAAK,CAACc,KAAK,CAACA,KAAK,IAAI,+BAA+B,CAAC;EACjE;EAEA,OAAOjB,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMa,qBAAqB,GAAG,MAAAA,CAAO;EAAEX,MAAM;EAAEE;AAAM,CAAC,KAAK;EACzD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,iBAAiB,EAAE;IACzDc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAET,MAAM;MAAEE;IAAM,CAAC;EAChD,CAAC,CAAC;EAEF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMe,KAAK,GAAG,MAAMjB,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIF,KAAK,CAACc,KAAK,CAACA,KAAK,IAAI,oCAAoC,CAAC;EACtE;EAEA,OAAOjB,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,eAAe;EACbP,WAAW;EACXQ,gBAAgB;EAChBY;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}