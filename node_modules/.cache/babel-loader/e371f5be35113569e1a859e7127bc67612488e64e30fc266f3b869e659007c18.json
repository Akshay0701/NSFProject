{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport roomService from '../services/roomService';\nconst useCreateTeams = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isCreatingTeams, setIsCreatingTeams] = useState(false);\n  const createTeams = async roomID => {\n    setIsCreatingTeams(true);\n    try {\n      const data = await roomService.createTeamsFromRoom(roomID);\n      toast.success('Teams created successfully!');\n      navigate(`/room/${roomID}/teams`);\n      return data;\n    } catch (err) {\n      console.error('Create teams error:', err);\n      toast.error(err.message || 'Failed to create teams');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n  return {\n    createTeams,\n    isCreatingTeams\n  };\n};\n_s(useCreateTeams, \"z1s59844yrRecOPiRFH7mq1AOf8=\", false, function () {\n  return [useNavigate];\n});\nexport default useCreateTeams;","map":{"version":3,"names":["useNavigate","toast","useState","roomService","useCreateTeams","_s","navigate","isCreatingTeams","setIsCreatingTeams","createTeams","roomID","data","createTeamsFromRoom","success","err","console","error","message"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/hooks/useCreateTeams.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport roomService from '../services/roomService';\n\nconst useCreateTeams = () => {\n  const navigate = useNavigate();\n  const [isCreatingTeams, setIsCreatingTeams] = useState(false);\n\n  const createTeams = async (roomID) => {\n    setIsCreatingTeams(true);\n    try {\n      const data = await roomService.createTeamsFromRoom(roomID);\n      toast.success('Teams created successfully!');\n      navigate(`/room/${roomID}/teams`);\n      return data;\n    } catch (err) {\n      console.error('Create teams error:', err);\n      toast.error(err.message || 'Failed to create teams');\n    } finally {\n      setIsCreatingTeams(false);\n    }\n  };\n\n  return {\n    createTeams,\n    isCreatingTeams,\n  };\n};\n\nexport default useCreateTeams;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMO,WAAW,GAAG,MAAOC,MAAM,IAAK;IACpCF,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAI;MACF,MAAMG,IAAI,GAAG,MAAMR,WAAW,CAACS,mBAAmB,CAACF,MAAM,CAAC;MAC1DT,KAAK,CAACY,OAAO,CAAC,6BAA6B,CAAC;MAC5CP,QAAQ,CAAC,SAASI,MAAM,QAAQ,CAAC;MACjC,OAAOC,IAAI;IACb,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;MACzCb,KAAK,CAACe,KAAK,CAACF,GAAG,CAACG,OAAO,IAAI,wBAAwB,CAAC;IACtD,CAAC,SAAS;MACRT,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,OAAO;IACLC,WAAW;IACXF;EACF,CAAC;AACH,CAAC;AAACF,EAAA,CAvBID,cAAc;EAAA,QACDJ,WAAW;AAAA;AAwB9B,eAAeI,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}