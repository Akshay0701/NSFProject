{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:5000/auth';\nconst login = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Login failed');\n  }\n  return response.json();\n};\nconst register = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Registration failed');\n  }\n  return response.json();\n};\nconst refreshToken = async (email, refreshToken) => {\n  const response = await fetch(`${BASE_URL}/refresh-login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      refresh_token: refreshToken\n    })\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to refresh token');\n  }\n  return response.json();\n};\nexport default {\n  login,\n  register,\n  refreshToken\n};","map":{"version":3,"names":["BASE_URL","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","register","refreshToken","refresh_token"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFResearchLocal/src/services/authService.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:5000/auth';\n\nconst login = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Login failed');\n  }\n\n  return response.json();\n};\n\nconst register = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Registration failed');\n  }\n\n  return response.json();\n};\n\nconst refreshToken = async (email, refreshToken) => {\n  const response = await fetch(`${BASE_URL}/refresh-login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, refresh_token: refreshToken }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to refresh token');\n  }\n\n  return response.json();\n};\n\nexport default { login, register, refreshToken };\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,QAAQ,EAAE;IAChDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,cAAc,CAAC;EAChD;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAME,QAAQ,GAAG,MAAAA,CAAOb,KAAK,EAAEC,QAAQ,KAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,WAAW,EAAE;IACnDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,qBAAqB,CAAC;EACvD;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMG,YAAY,GAAG,MAAAA,CAAOd,KAAK,EAAEc,YAAY,KAAK;EAClD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,EAAE;IACxDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEe,aAAa,EAAED;IAAa,CAAC;EAC7D,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,yBAAyB,CAAC;EAC3D;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,eAAe;EAAEZ,KAAK;EAAEc,QAAQ;EAAEC;AAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}