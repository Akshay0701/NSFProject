{"ast":null,"code":"const BASE_URL='api/nsf/auth';const login=async(email,password)=>{const response=await fetch(`${BASE_URL}/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const error=await response.json();throw new Error(error.error||'Login failed');}return response.json();};const register=async(email,password)=>{const response=await fetch(`${BASE_URL}/register`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const error=await response.json();throw new Error(error.error||'Registration failed');}return response.json();};export default{login,register};","map":{"version":3,"names":["BASE_URL","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","register"],"sources":["/Users/akshayjadhav/Documents/GitHub/NSFProject/src/services/authService.js"],"sourcesContent":["const BASE_URL = 'api/nsf/auth';\n\nconst login = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Login failed');\n  }\n\n  return response.json();\n};\n\nconst register = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Registration failed');\n  }\n\n  return response.json();\n};\n\nexport default { login, register };\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,cAAc,CAE/B,KAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,QAAQ,CAAE,CAChDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACnC,KAAM,IAAI,CAAAC,KAAK,CAACF,KAAK,CAACA,KAAK,EAAI,cAAc,CAAC,CAChD,CAEA,MAAO,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAE,QAAQ,CAAG,KAAAA,CAAOb,KAAK,CAAEC,QAAQ,GAAK,CAC1C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,QAAQ,WAAW,CAAE,CACnDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACnC,KAAM,IAAI,CAAAC,KAAK,CAACF,KAAK,CAACA,KAAK,EAAI,qBAAqB,CAAC,CACvD,CAEA,MAAO,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,cAAe,CAAEZ,KAAK,CAAEc,QAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}